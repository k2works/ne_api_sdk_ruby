require 'sinatra/base'
require 'sinatra/reloader'
require 'webrick'
require 'webrick/https'
require 'openssl'
require 'pp'
require 'yaml'
require 'ne_api_sdk_ruby'
require 'dotenv'
Dotenv.load

CERT_PATH = '.ssl/'

webrick_options = {
    :Port               => 8088,
    :Logger             => WEBrick::Log::new($stderr, WEBrick::Log::DEBUG),
    :DocumentRoot       => "/bin",
    :SSLEnable          => true,
    :SSLVerifyClient    => OpenSSL::SSL::VERIFY_NONE,
    :SSLCertificate     => OpenSSL::X509::Certificate.new(  File.open(File.join(CERT_PATH, "dev.crt.pem")).read),
    :SSLPrivateKey      => OpenSSL::PKey::RSA.new(          File.open(File.join(CERT_PATH, "dev.pem")).read),
    :SSLCertName        => [ [ "CN",WEBrick::Utils::getservername ] ]
}

CLIENT_ID = ENV['NE_API_CLIENT_ID']
CLIENT_SECRET = ENV['NE_API_CLIENT_SECRET']

class MyServer  < Sinatra::Base
  configure :development do
    register Sinatra::Reloader
  end

  get '/' do
    login_uri = client.neLogin
    redirect login_uri
  end

  get '/ne_api_sdk_ruby/login_only' do
    response = client.neLogin(nil,params['uid'],params['state'])
    response.to_json
    #redirect_uri = nil
    #client = NeApiSdkRuby::NeApiClient.new(CLIENT_ID, CLIENT_SECRET,redirect_uri)
  end

  get '/ne_api_sdk_ruby/api_find' do
    #////////////////////////////////////////////////////////////////////////////////
    #// 契約企業一覧を取得するサンプル
    #////////////////////////////////////////////////////////////////////////////////
    under_contract_company = client.apiExecuteNoRequiredLogin('/api_app/company')
    under_contract_company.to_json
  end

  helpers do
    def client
      redirect_uri = 'https://localhost:8088/ne_api_sdk_ruby/login_only'
      @client ||= NeApiSdkRuby::NeApiClient.new(CLIENT_ID, CLIENT_SECRET,redirect_uri)
    end
  end
end

Rack::Handler::WEBrick.run MyServer, webrick_options